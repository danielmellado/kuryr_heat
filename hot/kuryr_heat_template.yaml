heat_template_version: 2014-10-16

description: Simple template to deploy kuryr resources

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for the kuryr nodes
  master_flavor:
    type: string
    label: Flavor
    description: Flavor to be used for the masters
    default: m1.small
  worker_flavor:
    type: string
    label: Flavor
    description: Flavor to be used for the workers
    default: m1.small
  public_net:
    type: string
    description: public network for the instances
    default: public
  vm_net_cidr:
    type: string
    description: vm_net network address (CIDR notation)
  vm_net_gateway:
    type: string
    description: vm_net network gateway address
  pod_net_cidr:
    type: string
    description: pod_net network address (CIDR notation)
  pod_net_gateway:
    type: string
    description: pod_net network gateway address
  service_net_cidr:
    type: string
    description: service_net network address (CIDR notation)
  service_net_gateway:
    type: string
    description: service_net network gateway address
  service_router_port_ip:
    type: string
    description: IP for service router port
    default: 172.30.255.254
  service_lbaas_ip:
    type: string
    description: IP for the kubernetes load balancer
    default: 172.30.0.1
  external_dns_server:
    type: string
    description: IP for the DNS server
    default: ""
  dns_domain:
    type: string
    description: search domain for the node
  master_num:
    type: number
    description: Number of master VMs
    default: 1
  worker_num:
    type: number
    description: Number of worker VMs
    default: 1
  subports_per_pool:
    type: number
    description: Number of pre-created ports per pool
    default: 5

resources:
  network:
    type: OS::Kuryr::PodInVMNetworking
    properties:
      public_net: { get_param: public_net }
      vm_net_cidr: { get_param: vm_net_cidr }
      vm_net_gateway: { get_param: vm_net_gateway }
      pod_net_cidr: { get_param: pod_net_cidr }
      pod_net_gateway: { get_param: pod_net_gateway }
      service_net_cidr: { get_param: service_net_cidr }
      service_net_gateway: { get_param: service_net_gateway }
      service_router_port_ip: { get_param: service_router_port_ip }
      service_lbaas_ip: { get_param: service_lbaas_ip }

  master_key:
    type: OS::Nova::KeyPair
    properties:
      name: { get_param: 'OS::stack_name' }
      save_private_key: true

  master_nodes:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: master_num }
      resource_def:
        type: master_node.yaml
        properties:
          public_net: { get_param: public_net }
          image: { get_param: image }
          flavor: { get_param: master_flavor }
          key: { get_resource: master_key }
          private_key: { get_attr: [master_key, private_key] }
          vm_net: { get_attr: [network, vm_net_id] }
          vm_subnet: { get_attr: [network, vm_subnet_id] }
          k8s_lb_pool: { get_attr: [network, k8s_lb_pool_id] }
          k8s_api_sg: { get_attr: [network, k8s_api_sg_id] }
          name: "master-%index%"
          external_dns_server: { get_param: external_dns_server }
          dns_domain: { get_param: dns_domain }

  worker_nodes:
    type: OS::Heat::ResourceGroup
    properties:
      count: { get_param: worker_num }
      resource_def:
        type: worker_node.yaml
        properties:
          image: { get_param: image }
          flavor: { get_param: worker_flavor }
          key: { get_resource: master_key }
          index: "%index%"
          name: "worker-%index%"
          network: { get_attr: [network, vm_net_id] }
          subnet: { get_attr: [network, vm_subnet_id] }
          external_dns_server: { get_param: external_dns_server }
          dns_domain: { get_param: dns_domain }
          pod_network: { get_attr: [network, pod_net_id] }
          pod_subnet: { get_attr: [network, pod_subnet_id] }
          subports_per_pool: { get_param: subports_per_pool }
          pod_access_sg: { get_attr: [network, pod_access_sg_id] }
outputs:
  trunk_ports:
    value: { get_attr: [worker_nodes, trunk_port_id] }
  trunk_addresses:
    value: { get_attr: [worker_nodes, trunk_port_ips] }
  trunk_dns:
    value: { get_attr: [worker_nodes, trunk_port_dns] }
  master_fips:
    value: { get_attr: [master_nodes, instance_fip] }
  master_port_dns:
    value: { get_attr: [master_nodes, port_dns] }
  vm_subnet:
    value: { get_attr: [network, vm_subnet_id] }
  pod_subnet:
    value: { get_attr: [network, pod_subnet_id] }
  service_subnet:
    value: { get_attr: [network, service_subnet_id] }
  k8s_api_sg:
    value: { get_attr: [network, k8s_api_sg_id] }
  pod_access_sg:
    value: { get_attr: [network, pod_access_sg_id] }
  master_key_pub:
    value: { get_attr: [master_key, public_key] }
  master_key_priv:
    value: { get_attr: [master_key, private_key] }
